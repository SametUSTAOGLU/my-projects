AWSTemplateFormatVersion: 2010-09-09
Description: |
  
Parameters:
  myVPC:
    Description: lutfen vpc seciniz
    Type: AWS::EC2::VPC::Id

  myIT:
    Description: Select the instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t2.nano
      - t3.nano

  myKP:
    Description: lutfen key secin
    Type: AWS::EC2::KeyPair::KeyName
    Default: key

  mySubnets:
    Description: Please select at least 2 subnets. 
    Type: List<AWS::EC2::Subnet::Id>
  myVPC:
    Description: Please select VPC 
    Type: AWS::EC2::VPC::Id  

Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0dc2d3e4c0f9ebd18
    us-east-2:
      AMI: ami-0233c2d874b811deb
    us-west-1:
      AMI: ami-0ed05376b59b90e46
    us-west-2:
      AMI: ami-0dc8f589abe99f538
    eu-west-1:
      AMI: ami-058b1b7fe545997ae    
  
Resources:

  sgALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: alp-sec-grup # Required
      GroupName: alb-sec-grup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref myVPC

  sgLaunchTemp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: launch-temp-sec-grup # Required
      GroupName: launch-temp-sec-grup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt sgALB.GroupId
      VpcId: !Ref myVPC
  sgRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS-sec-grup # Required
      GroupName: RDS-sec-grup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !GetAtt sgLaunchTemp.GroupId
      

  myLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap
          - RegionImageMap
          - !Ref AWS::Region
          - AMI
        InstanceType: !Ref myIT
        KeyName: !Ref myKP
        SecurityGroupIds:
          - !GetAtt sgALB.GroupId
        UserData: !Base64 |
          #!/bin/bash
          yum update -y
          yum install git -y
          sudo pip3 install flask
          pip3 install flask-mysql
          pip3 install sqlalchemy
          pip3 install Flask-SQLAlchemy 
          git clone https://github.com/sametustaoglu/my-projects.git
          cd /home/ec2-user
          mkdir proje
          cd proje
          endpoint=${!Ref myRDS.Endpoint.Address}
          touch dbserver.endpoint
          echo endpoint >  dbserver.endpoint
          sudo cp -r /my-projects/aws/projects/Project-004-Phonebook-Application/* /home/ec2-user/proje
          sudo python3 phonebook-app.py

  myALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt sgALB.GroupId 
      Subnets: !Ref mySubnets
      Type: application

  # https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html
  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs 
      DesiredCapacity: "1"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref myLT
        Version: "1"
      MaxSize: "3" # Required
      MinSize: "1" # Required
      TargetGroupARNs:
        - !Ref myTG
  myListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - Type: forward
          TargetGroupArn: !Ref myTG 
      LoadBalancerArn: !Ref myALB # Required
      Port: 80
      Protocol: HTTP
  myTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      VpcId: !Ref myVPC
  myCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref myASG  # Required
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60.0
  
  myRDS:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '20'
      DBInstanceClass: db.t2.micro # Required
      DBName: "phonebook_db"
      Engine: mysql
      EngineVersion: 8.0.19
      MasterUserPassword: "12345678"
      MasterUsername: "admin"
      Port: 3306

Outputs:
  
  AppUrl:
      Description: Url of the ALB
      Value: !Join
        - ""
        - - "http://"
          - !GetAtt myALB.DNSName
  Cluster:
    Description: The DB Cluster Name
    Value: !Ref myRDS